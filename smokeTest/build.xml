<?xml version="1.0" encoding="UTF-8"?>
<project name="smoketest" default="run" basedir="." xmlns:ac="antlib:net.sf.antcontrib">  
       
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
    <tstamp> 
        <!--format property="timeStamp" pattern="dd.MMM.yy HH.mma" locale="en"/--> 
        <format property="timeStamp" pattern="dd.MMM.yy HH.mma" timezone="GMT" 
                offset="-4" unit="hour"/> 
    </tstamp>
    
    <property name="classes.dir" value="bin" />
    <property name="src.dir" value="src" />
    <property name="report.dir" value="reports" />
    <!--property name="browser" value="/Applications/Firefox.app"/-->
    <property name="browser" value="C:/Program Files/Mozilla Firefox/firefox.exe"/>    
    
    <path id="libs">
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
        <pathelement path="${basedir}\${classes.dir}"/>
    </path>
    
    <target name="runsmoke">
        <property name="runTarget" value="FullSmoke Suite"/>            
        <antcall target="init"/>
        <antcall target="compile"/>
        <antcall target="copy-resources"/>
        <antcall target="runSmokeTests"/>
        <antcall target="testng-xslt-report"/>
        <antcall target="zip"/>
        <antcall target="email"/>     
        <antcall target="openReport"/>
    </target>
    
    <target name="runcritical">
        <property name="runTarget" value="CriticalSmoke Suite"/>
        <antcall target="init"/>
        <antcall target="compile"/>
        <antcall target="copy-resources"/>
        <antcall target="runCriticalTests"/>
        <antcall target="testng-xslt-report"/>
        <antcall target="zip"/>
        <antcall target="email"/>         
        <antcall target="openReport"/>
    </target>
    
    <target name="rundebug">
        <property name="runTarget" value="Debug Test"/>
        <antcall target="init"/>
        <antcall target="compile"/>
        <antcall target="copy-resources"/>
        <antcall target="runDebugTests"/>
        <antcall target="testng-xslt-report"/>
        <antcall target="zip"/>
        <antcall target="email"/>        
        <antcall target="openReport"/>
    </target>
    
    <target name="runmail">
        <antcall target="email"/>        
    </target>
    
    <!-- Delete old data and create new directories -->
    <target name="init" >
        <echo>Initlizing...</echo>
        <delete dir="${classes.dir}" />
        <mkdir dir="${classes.dir}"/>
        <delete dir="${report.dir}" />
        <mkdir dir="${report.dir}"/>
    </target>

    <!-- Complies the java files -->
    <target name="compile">
        <echo>Compiling...</echo>
        <javac debug="true" srcdir="${src.dir}" destdir="${classes.dir}" classpathref="libs" />
    </target>
    
    <target name="copy-resources" description="Copies resources.">
        <copy todir="${basedir}\${classes.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*.properties" />
            </fileset>
        </copy>
    </target>

    <!-- Runs the file and generates Reportng report -->
    <target name="runSmokeTests" description="Running tests" >
        <echo>Running Tests...</echo>
        <taskdef resource="testngtasks" classpathref="libs"/>        
        <ac:for list="${antPrgrm}" param = "program">
            <sequential>
                <echo>Program: @{program}</echo>
                <ac:for list="${antEnv}" param = "env">
                    <sequential>
                        <echo>Env: @{env}</echo>
                        <ac:for list="${antBrwsr}" param = "brwsr">
                            <sequential>
                                <echo>Driver: @{brwsr}</echo>
                                <testng outputDir="${report.dir}\@{program}_@{env}_@{brwsr}" classpathref="libs" delegatecommandsystemproperties="true">  
                                    <xmlfileset dir="${basedir}" includes="smoke.xml"/>
                                    <sysproperty key="program" value="@{program}@{env}"/>   
                                    <sysproperty key="brwsr" value="@{brwsr}"/>
                                    <sysproperty key="os" value="${antOS}"/>
                                    <sysproperty key="test" value="SmokeTests"/>
                                </testng>
                            </sequential>
                        </ac:for> 
                    </sequential>
                </ac:for> 
            </sequential>
        </ac:for>         
        <!--propertyset refid="propset"/--> 
        <!--xmlfileset dir="${basedir}" includes="2GU.xml"/>
        <testng outputDir="${report.dir}" classpathref="libs" suitethreadpoolsize="2">  
        <xmlfileset dir="${basedir}" includes="UNC.xml" delegatecommandsystemproperties="true"/-->            
    </target>
    
    <!-- Runs the file and generates Reportng report -->
    <target name="runCriticalTests" description="Running tests" >
        <echo>Running Tests...</echo>
        <taskdef resource="testngtasks" classpathref="libs"/>
        <ac:for list="${antPrgrm}" param = "program">
            <sequential>
                <echo>Program: @{program}</echo>
                <ac:for list="${antEnv}" param = "env">
                    <sequential>
                        <echo>Env: @{env}</echo>
                        <ac:for list="${antBrwsr}" param = "brwsr">
                            <sequential>
                                <echo>Driver: @{brwsr}</echo>
                                <testng outputDir="${report.dir}\@{program}_@{env}_@{brwsr}" classpathref="libs" delegatecommandsystemproperties="true">  
                                    <xmlfileset dir="${basedir}" includes="critical.xml"/>
                                    <sysproperty key="program" value="@{program}@{env}"/>   
                                    <sysproperty key="brwsr" value="@{brwsr}"/>
                                    <sysproperty key="os" value="${antOS}"/>
                                    <sysproperty key="test" value="CriticalTests"/>
                                </testng>
                            </sequential>
                        </ac:for> 
                    </sequential>
                </ac:for> 
            </sequential>
        </ac:for>        
        <!--propertyset refid="propset"/--> 
        <!--xmlfileset dir="${basedir}" includes="2GU.xml"/>
        <testng outputDir="${report.dir}" classpathref="libs" suitethreadpoolsize="2">  
        <xmlfileset dir="${basedir}" includes="UNC.xml" delegatecommandsystemproperties="true"/-->            
    </target>
    
    <!-- Runs the file and generates Reportng report -->
    <target name="runDebugTests" description="Running tests" >
        <echo>Running Tests...</echo>
        <taskdef resource="testngtasks" classpathref="libs"/>
        <ac:for list="${antPrgrm}" param = "program">
            <sequential>
                <echo>Program: @{program}</echo>
                <ac:for list="${antEnv}" param = "env">
                    <sequential>
                        <echo>Env: @{env}</echo>                
                        <ac:for list="${antBrwsr}" param = "brwsr">
                            <sequential>
                                <echo>Driver: @{brwsr}</echo>
                                <testng outputDir="${report.dir}\@{program}_@{env}_@{brwsr}" classpathref="libs" delegatecommandsystemproperties="true">  
                                    <xmlfileset dir="${basedir}" includes="debug.xml"/>
                                    <sysproperty key="program" value="@{program}@{env}"/>   
                                    <sysproperty key="brwsr" value="@{brwsr}"/>
                                    <sysproperty key="os" value="${antOS}"/>
                                    <sysproperty key="test" value="DebugTests"/>
                                </testng>
                            </sequential>
                        </ac:for> 
                    </sequential>
                </ac:for> 
            </sequential>
        </ac:for>                 
    </target>
    
    <!-- Generate XSLT reports -->
    <target name="testng-xslt-report">
        <ac:for list="${antPrgrm}" param = "program">
            <sequential>
                <ac:for list="${antEnv}" param = "env">
                    <sequential>                
                        <ac:for list="${antBrwsr}" param = "brwsr">
                            <sequential>
                                <if>
                                    <available file="${basedir}/${report.dir}/@{program}_@{env}_@{brwsr}" type="dir"/>
                                    <then>
                                        <xslt in="${basedir}/${report.dir}/@{program}_@{env}_@{brwsr}/testng-results.xml" 
                                              style="${basedir}/testng-results.xsl" 
                                              out="${basedir}/${report.dir}/@{program}_@{env}_@{brwsr}/testng-xslt/index.html">
                                            <param expression="${basedir}/${report.dir}/@{program}_@{env}_@{brwsr}/testng-xslt/" name="testNgXslt.outputDir"/>
                                            <param expression="true" name="testNgXslt.sortTestCaseLinks"/>
                                            <param expression="FAIL,SKIP,PASS,CONF,BY_CLASS" name="testNgXslt.testDetailsFilter" />
                                            <param expression="true" name="testNgXslt.showRuntimeTotals"/>
                                            <classpath refid="libs"/>
                                        </xslt>
                                    </then>
                                    <else>
                                        <echo>XSLT report is not generated as '@{program}_@{env}_@{brwsr}' report folder is missing</echo>
                                    </else>
                                </if>                            
                            </sequential>
                        </ac:for> 
                    </sequential>
                </ac:for>
            </sequential>
        </ac:for>        
    </target>   
    
    <!-- Generate Report Zip folder -->
    <target name="zip">
        <zip destfile="${basedir}/${report.dir}/${runTarget} Report-${timeStamp}.zip">
            <zipfileset dir="${basedir}/${report.dir}" excludes="**/*.zip"/>            
        </zip>        
    </target>       
    
    <!-- Autosend Test Report zip folder -->
    <target name="email">
        <if>
            <available file="${report.dir}/${runTarget} Report-${timeStamp}.zip"/>
            <then> 
                <mail ssl="false" mailhost="techizen.in" mailport="25" 
                      subject="${runTarget} Execution Report">
                    <from address="somesh.bansal@techizen.in"/>                    
                    <to address="tutordemo2@gmail.com"/>                    
                    <message>Attached is the ${runTarget} Report executed at ${timeStamp}</message>                       
                    <attachments>
                        <fileset dir="${report.dir}/">
                            <include name="**/*.zip"/>
                        </fileset>
                    </attachments>                      
                </mail>   
            </then>
            <else>
                <!--fail message="Zip folder is not found"/-->
                <echo>Mail is not sent as zip folder is not found</echo>
            </else>
        </if>                       
    </target>

    <!-- Open the report in browser.-->
    <target name="openReport"> 
        <exec executable="${browser}" spawn="yes"> 
            <arg line="'${report.dir}\index.html'"/> 
        </exec>
    </target>
</project>  
